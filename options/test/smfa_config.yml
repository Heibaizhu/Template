# general settings
name: JDRNN
model_type: JDRNNModel
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 10
dist: false

# dataset and data loader settings
datasets:
  val0:
    name: SOTS_INDOOR
    type: JDRNNITSDataset
    dataroot: ~
    json: /mnt/data/zhajunwei/JDRNN/metadata/RESIDE-STANDARD-ITS-TEST.json
    mean: ~
    std: ~
    io_backend:
      type: disk
    batch_size_per_gpu: 1
    pin_memory: true
    num_worker_per_gpu: 4
    center_size: ~
#  val1:
#    name: SOTS
#    type: SIHROTSDataset
#    dataroot: ~
#    json: /mnt/source/zjw/DATASETS/DEHAZEDATASET/RESIDE/RESIDE_standard/SOTS/SOTS/outdoor.json
#    mean: ~
#    std: ~
#    io_backend:
#      type: disk
#    batch_size_per_gpu: 1
#    pin_memory: true
#    num_worker_per_gpu: 4
#    center_size: ~
#
#  val2:
#    name: OHAZE
#    type: SIHROTSDataset
#    dataroot: ~
#    json: /mnt/source/zjw/DATASETS/DEHAZEDATASET/O-Hazy/O-HAZE/# O-HAZY NTIRE 2018/Resized-Test.json
#    mean: ~
#    std: ~
#    io_backend:
#      type: disk
#    batch_size_per_gpu: 1
#    pin_memory: true
#    num_worker_per_gpu: 4
#    center_size: ~
#
#  val3:
#    name: NH-HAZE
#    type: SIHROTSDataset
#    dataroot: ~
#    json: /mnt/source/zjw/DATASETS/DEHAZEDATASET/NH-HAZE/Test-5.json
#    mean: ~
#    std: ~
#    io_backend:
#      type: disk
#    batch_size_per_gpu: 1
#    pin_memory: true
#    num_worker_per_gpu: 4
#    center_size: ~

# network structures
network_g:
  type: SMFA
  midplanes: 64
  block_num: [ 4, 4, 4 ]
#  inplanes: 3
#  outplanes: 3
#  midplanes: 32
#  bilinear: true
#  pos_dim: 20
#  depth_level: 32

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: /mnt/data/zhajunwei/JDRNN2/experiments/MFAM/training_states/22260.state
  experiments_root: ./experiments
  visualization: ~

# training settings
train:
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [100000, 200000, 300000]
    gamma: 0.5

  total_iter: 400000
  warmup_iter: -1  # no warm up
  only_y_channel: true

  # losses
  pix_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  
  flow_opt:
    type: L1Loss
    loss_weight: 0.01
    reduction: mean
  
  census_opt:
    type: CensusLoss
    loss_weight: 0.01

  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      'conv1_2': 0.5
      'conv2_2': 0.3
      'conv3_3': 0.2
    vgg_type: vgg16
    use_input_norm: true
    range_norm: true
    perceptual_weight: 0.05
    style_weight: 0
    criterion: l1


# validation settings
val:
  save_img: true


  metrics:
    psnr: # metric name, can be arbitrary
      type: PSNR_TENSOR
      data_range: 1
    ssim: #
      type: SSIM_TENSOR
      data_range: 1
      channel: 3
    ciede2000: #
      type: CIEDE2000_TENSOR



# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
